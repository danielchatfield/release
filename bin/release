#!/usr/bin/env node
'use strict';
var os = require('os');
var path = require('path');

var chalk = require('chalk');
var Insight = require('insight');
var pkg = require('../package.json');
var release = require('../lib/release.js').run;
var notifier = require('update-notifier')({
  packagePath: '../package.json'
});
var optimist = require('optimist');
var argv = optimist.argv;

optimist.usage(chalk.cyan('Release') + ' is a small CLI utility to make releasing npm, PyPI \nand bower components easy.\n\n ' + chalk.cyan('Usage') + ': release ' + chalk.magenta('[<version> | major | minor | patch]') + '\n\n If a version is specified then that version will be released.\n If major, minor or patch is passed then the existing version\n number will be bumped accordingly.');

var insight = new Insight({
  trackingCode: 'UA-43097923-2',
  packageName: pkg.name,
  packageVersion: pkg.version
});


var run = function () {
  /*
    insight.askPermission isn't blocking so we have to wrap everything in a function and pass it as a callback
  */

  if(notifier.update) {
    insight.track('actions','notify-update');
    notifier.notify(true);
  }

  if(argv.help || argv.usage || argv._.length === 0) {
    return console.log(optimist.help());
  }

  var version = argv._[0];
  
  release(version);  
};

var afterPermission = function () {
  insight.track('downloaded');
  insight.track('platform', os.type(), os.release() );
  run();
};

if(insight.optOut === undefined) {
  insight.askPermission(null, afterPermission);
} else {
  run();
}